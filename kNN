# 机器学习实战代码整理 kNN

from numpy import *
import operator

def createDataSet():
    group = array([[1.0,1.1],[1.0,1.0],[0,0],[0,0.1]])
    labels = ['A','A','B','B']
    return group, labels

group,labels = createDataSet()

def classify0(inX,dataSet,labels,k):   # 输入向量，样本集，标记，k
    dataSetSize = dataSet.shape[0] # 4
    # 距离计算
    diffMat = tile(inX,(dataSetSize,1))-dataSet # 输入的向量与每个样本作差，取差的平方和再开方得到距离
    sqDiffMat = diffMat**2
    sqDistances = sqDiffMat.sum(axis=1)
    distances = sqDistances**0.5
    
    sortedDistIndicies = distances.argsort()
    classCount={}
    # 选择距离最小的k个点
    for i in range(k):
        voteIlabel = labels[sortedDistIndicies[i]]
        classCount[voteIlabel] = classCount.get(voteIlabel,0)+1
    sortedClassCount = sorted(classCount.items(),key=operator.itemgetter(1),reverse=True)
    return sortedClassCount[0][0]
    
    classify0([1,1],group,labels,3)
    
